{"version":3,"sources":["services/api.js","context/data.jsx","components/Header/styles.js","components/Header/index.jsx","components/StatusItem/styles.js","components/StatusItem/index.jsx","components/StatusBar/styles.js","components/StatusBar/index.jsx","components/Map/styles.js","components/Map/index.jsx","components/MainPage.jsx","components/CountriesDetail/styles.js","components/CountriesDetail/index.jsx","components/DetailsGrid/styles.js","components/DetailsGrid/index.jsx","utils/utils.js","components/Footer/styles.js","components/Footer/index.jsx","styles/global.js","App.jsx","index.js","assets/virus.svg"],"names":["api","axios","create","baseURL","DataContext","createContext","DataProvider","children","useState","data","setData","selectedCountry","setSelectedCountry","handleData","useEffect","get","then","response","Global","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","countries","Object","values","Countries","maxCases","findCountry","PercentRecovered","PercentDeaths","catch","err","console","log","handleSelectCountry","useCallback","country","Provider","value","useData","context","useContext","Error","Container","styled","div","Header","src","Virus","alt","to","keyframes","fadeIn","statusTitles","StatusItem","title","parseInt","toLocaleString","StatusBar","info","setInfo","Country","entries","map","entrie","Map","path","selector","strokeWidth","stroke","CountryCode","rgbColor","percentCases","toFixed","colorLevel","Math","trunc","calculatedColor","key","id","fill","style","onClick","handleClick","MainPage","tr","CountryDetail","className","DetailsGrid","countriesData","setCountriesData","sortUp","setSortUp","el","rows","name","up","sortedCountries","target","sort","a","b","CountriesDetail","Footer","href","createGlobalStyle","App","exact","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oNAMeA,E,OAJHC,EAAMC,OAAO,CACrBC,QAAS,gCCCPC,EAAcC,wBAAc,IAE5BC,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAEPC,mBAAS,MAFF,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGeF,mBAAS,MAHxB,mBAGzBG,EAHyB,KAGRC,EAHQ,KAK3BC,EAAaC,qBAAU,WACzBd,EAAIe,IAAI,WACHC,MAAM,SAAAC,GAYH,IAZgB,IAAD,EAOQA,EAASR,KAAKS,OALjCC,EAFW,EAEXA,aACAC,EAHW,EAGXA,UACAC,EAJW,EAIXA,aACAC,EALW,EAKXA,eACAC,EANW,EAMXA,YACAC,EAPW,EAOXA,eAEEC,EAAYC,OAAOC,OAAPD,OAAA,IAAAA,CAAA,GAAkBT,EAASR,KAAKmB,YAE9CC,EAAW,EACf,MAA0BJ,EAA1B,eAAqC,CAAhC,IAAMK,EAAW,KACdA,EAAYR,eAAiBO,IAC7BA,EAAWC,EAAYR,gBAE3BQ,EAAYC,iBAAqBD,EAAYN,eAAiBM,EAAYR,eAAmB,IAC7FQ,EAAYE,cAAkBF,EAAYP,YAAcO,EAAYR,eAAmB,IAG3FZ,EAAQ,CACJY,iBACAC,cACAC,iBACAL,eACAC,YACAC,eACAQ,WACAJ,iBAGPQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,CAACzB,IAGE4B,EAAsBC,uBAAY,SAACC,GACrC3B,EAAmB2B,KACpB,CAAC3B,IAGJ,OACI,kBAACR,EAAYoC,SAAb,CAAsBC,MAAO,CAAEhC,OAAMI,aAAYF,kBAAiB0B,wBAC7D9B,IAMPmC,EAAU,WACZ,IAAMC,EAAUC,qBAAWxC,GAE3B,IAAKuC,EACD,MAAM,IAAIE,MAAM,8CAGpB,OAAOF,G,syBClEJ,IAAMG,EAAYC,IAAOC,IAAV,KCoBPC,EAfA,kBACP,kBAACH,EAAD,KACI,8BACI,yBAAKI,IAAKC,IAAOC,IAAI,aACrB,iDAEJ,6BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,Y,koBCbT,IAAMP,EAAYC,IAAOC,IAAV,IAMAM,YANA,IAMYC,WCH5BC,EAAe,CACjBrC,aAAc,gBACdC,UAAW,aACXC,aAAc,gBACdC,eAAgB,kBAChBC,YAAa,eACbC,eAAgB,mBAcLiC,EAXI,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,MAAV,OACf,kBAAC,EAAD,KACI,6BACI,8BACMF,EAAaE,IAEnB,4BAAKC,SAASlB,GAAOmB,qB,wlBClB1B,IAAMd,EAAYC,IAAOC,IAAV,KCiFPa,EA7EG,WAAO,IAAD,EAEMrD,mBAAS,MAFf,mBAEZsD,EAFY,KAENC,EAFM,OAGcrB,IAA1BjC,EAHY,EAGZA,KAAME,EAHM,EAGNA,gBAoDd,OAlDAG,qBAAU,WAEN,GAAKL,EAAL,CAFY,IAORU,EAKmBV,EALnBU,aACAC,EAImBX,EAJnBW,UACAC,EAGmBZ,EAHnBY,aACAC,EAEmBb,EAFnBa,eACAC,EACmBd,EADnBc,YACAC,EAAmBf,EAAnBe,eAEJuC,EAAQ,CACJ5C,eACAC,YACAC,eACAC,iBACAC,cACAC,sBAEL,CAAEf,IAGLK,qBAAU,WAEN,GAAKH,EAAL,CAFY,IAORQ,EAKmBR,EALnBQ,aACAC,EAImBT,EAJnBS,UACAC,EAGmBV,EAHnBU,aACAC,EAEmBX,EAFnBW,eACAC,EACmBZ,EADnBY,YACAC,EAAmBb,EAAnBa,eAEJuC,EAAQ,CACJ5C,eACAC,YACAC,eACAC,iBACAC,cACAC,sBAEL,CAACb,IAIA,kBAAC,EAAD,KACI,4BAAMA,EAAe,UACPA,EAAgBqD,QADT,gEAKrB,6BACOF,EAEKpC,OAAOuC,QAAQH,GAAMI,KAAI,SAAAC,GAAM,OAC3B,kBAAC,EAAD,CACIT,MAAOS,EAAO,GACd1B,MAAO0B,EAAO,QAJtB,0D,0mBCpEjB,IAAMrB,EAAYC,IAAOC,IAAV,KCgEPoB,EAvDH,WAAO,IAAD,EAEwB1B,IAA9BjC,EAFM,EAENA,KAAM4B,EAFA,EAEAA,oBAuBd,OACE,kBAAC,EAAD,KACE,kBAAC,YAAD,CAAWgC,KA/BH,iCAgCJ,kBAAC,WAAD,CACIC,SAAS,OACTC,YAAY,IACZC,OAAO,SAGP/D,GAAQiB,OAAOC,OAAOlB,EAAKgB,WAAWyC,KAAI,SAAA3B,GACtC,GAAKA,EAAQkC,YAAb,CAEA,IAAMC,EA3BE,SAACpD,GACrB,GAAuB,IAAnBA,EACA,MAAM,mDAGV,IACMqD,GAAgBrD,EAAiBb,EAAKoB,UAAU+C,QAAQ,GAExDC,EAAaC,KAAKC,MAHN,IAGwBJ,GAI1C,MAAM,oBAAN,OAPkB,IAKQE,EAAa,GAEvC,gCAe6BG,CAAgBzC,EAAQjB,gBAEzC,OAAO,kBAAC,WAAD,CACH2D,IAAK1C,EAAQkC,YACbS,GAAI3C,EAAQkC,YACZH,SAAQ,WAAM/B,EAAQkC,aACtBU,KAAK,OACLC,MAAOV,EACPW,QAAS,kBAxCT,SAAC9C,GACjBF,EAAoBE,GAuCW+C,CAAY/C,aC1CpCgD,EAVE,WAEb,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gZCPL,IAAMzC,EAAYC,IAAOyC,GAAV,KCuBPC,EAtBO,SAAC,GAAD,IACdhB,EADc,EACdA,YACAT,EAFc,EAEdA,QACA1C,EAHc,EAGdA,eACAC,EAJc,EAIdA,YACAC,EALc,EAKdA,eAIAO,GATc,EAMdZ,aANc,EAOdC,UAPc,EAQdC,aARc,EASdU,kBACAC,EAVc,EAUdA,cAVc,OAYlB,kBAAC,EAAD,CAAWiD,IAAKR,GACZ,4BAAKT,GACL,wBAAI0B,UAAU,SAAS/B,SAASrC,GAAgBsC,kBAChD,wBAAI8B,UAAU,eAAe/B,SAASnC,GAAgBoC,kBACtD,wBAAI8B,UAAU,eAAe3D,EAAiB6C,QAAQ,IACtD,wBAAIc,UAAU,aAAa/B,SAASpC,GAAaqC,kBACjD,wBAAI8B,UAAU,aAAa1D,EAAc4C,QAAQ,M,y1CCnBlD,IAAM9B,EAAYC,IAAOC,IAAV,IAIAM,YAJA,IAIYC,WCoEnBoC,EAjEK,WAAO,IAAD,EAEoBnF,mBAAS,IAF7B,mBAEfoF,EAFe,KAEAC,EAFA,OAGMrF,mBAAS,IAHf,mBAGfsF,EAHe,KAGPC,EAHO,KAKdtF,EAASiC,IAATjC,KAGRK,qBAAU,WACNL,GAAQoF,EAAiBpF,EAAKgB,aAC/B,CAAChB,IAGJ,IAAM6E,EAAc,SAACU,GACjB,ICvBiBC,EAAMC,EAAMC,EDuBvBC,GCvBWH,EDuBuBL,ECvBjBM,EDuBgCF,EAAGK,OAAOnB,GCvBpCiB,EDuBwCL,ECrB3DpE,OAAOC,OAAOsE,GAEfK,MAAK,SAACC,EAAGC,GAClB,OAAIL,EACQI,EAAEL,GAAQM,EAAEN,GAAS,EAAMM,EAAEN,GAAQK,EAAEL,IAAU,EAAI,EAErDK,EAAEL,GAAQM,EAAEN,GAAS,EAAMM,EAAEN,GAAQK,EAAEL,IAAU,EAAI,MDgBjEH,GAAWD,GACXD,EAAiBO,IAGrB,OACI,kBAAC,EAAD,KACI,6BACI,+BACI,+BACI,4BACI,wBAAIlB,GAAG,UAAUG,QAASC,GACtB,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,WAIA,wBAAIR,GAAG,iBAAiBG,QAASC,GAC7B,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,SAIA,wBAAIR,GAAG,iBAAiBG,QAASC,GAC7B,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,aAIA,wBAAIR,GAAG,mBAAmBG,QAASC,GAC/B,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,KAIA,wBAAIR,GAAG,cAAcG,QAASC,GAC1B,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,UAIA,wBAAIR,GAAG,gBAAgBG,QAASC,GAC5B,kBAAC,IAAD,CAAiBI,UAAU,SAD/B,OAMR,+BACOE,EAEMlE,OAAOC,OAAOiE,GAAe1B,KAAI,SAAA3B,GAAO,OACrC,kBAACkE,EAAoBlE,MAFzB,4D,seE7DzB,IAAMO,EAAYC,IAAOC,IAAV,KCUP0D,EAPA,kBACX,kBAAC,EAAD,KACI,iEACA,uCAAY,uBAAGC,KAAK,+BAAR,0B,8kCCNLC,kBAAf,KC0BeC,GDmBU9D,IAAOC,IAAV,KCnCV,kBACV,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACI,kBAAC,IAAD,CAAO8D,OAAK,EAACzC,KAAK,uBAAuB0C,UAAWxB,IACpD,kBAAC,IAAD,CAAOuB,OAAK,EAACzC,KAAK,IAAI0C,UAAWxB,IACjC,kBAAC,IAAD,CAAOuB,OAAK,EAACzC,KAAK,WAAW0C,UAAWlD,IACxC,kBAAC,IAAD,CAAOiD,OAAK,EAACzC,KAAK,WAAW0C,UAAWpB,IAC5C,kBAAC,EAAD,QAGJ,kBAAC,EAAD,SCpBJqB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAENC,SAASC,eAAe,U,mBCR1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.2bbb9229.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.covid19api.com/'\r\n}); \r\n\r\nexport default api;","import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\n\r\nimport api from '../services/api';\r\n\r\nconst DataContext = createContext({});\r\n\r\nconst DataProvider = ({children}) => {\r\n    \r\n    const [ data, setData ] = useState(null);\r\n    const [ selectedCountry, setSelectedCountry ] = useState(null);\r\n\r\n    const handleData = useEffect(() => {\r\n        api.get('summary')\r\n            .then( response => {\r\n                const { \r\n                    NewConfirmed,\r\n                    NewDeaths,\r\n                    NewRecovered,\r\n                    TotalConfirmed,\r\n                    TotalDeaths,\r\n                    TotalRecovered } = response.data.Global;\r\n\r\n                const countries = Object.values({...response.data.Countries});\r\n\r\n                let maxCases = 0;\r\n                for (const findCountry of countries) {\r\n                    if (findCountry.TotalConfirmed > maxCases) {\r\n                        maxCases = findCountry.TotalConfirmed;\r\n                    }\r\n                    findCountry.PercentRecovered = ( findCountry.TotalRecovered / findCountry.TotalConfirmed ) * 100;\r\n                    findCountry.PercentDeaths = ( findCountry.TotalDeaths / findCountry.TotalConfirmed ) * 100;\r\n                }\r\n\r\n                setData({\r\n                    TotalConfirmed,\r\n                    TotalDeaths,\r\n                    TotalRecovered,\r\n                    NewConfirmed,\r\n                    NewDeaths,\r\n                    NewRecovered, \r\n                    maxCases,\r\n                    countries  \r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [data]);\r\n\r\n\r\n    const handleSelectCountry = useCallback((country) => {\r\n        setSelectedCountry(country);\r\n    }, [setSelectedCountry]);\r\n\r\n\r\n    return (\r\n        <DataContext.Provider value={{ data, handleData, selectedCountry, handleSelectCountry }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nconst useData = () => {\r\n    const context = useContext(DataContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useData must be used within a DataProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\n\r\nexport { DataProvider, useData }\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 16px;\r\n    background-color: #202225;\r\n\r\n    main {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-between; \r\n\r\n        img {\r\n            width: 3rem;\r\n            margin-right: 16px;\r\n        }\r\n\r\n        h1 {\r\n            font-size: 28px;\r\n            color: #43b581;\r\n        }\r\n    }\r\n    \r\n\r\n    div {\r\n\r\n        a {\r\n            font-size: 20px;\r\n            margin-left: 24px;\r\n            transition: all .3s;\r\n\r\n            &:hover {\r\n                color: #43b581;\r\n            }\r\n        }\r\n    }\r\n\r\n`; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Virus from '../../assets/virus.svg';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Header = () => (\r\n        <Container>\r\n            <main>\r\n                <img src={Virus} alt=\"Covid-19\" />\r\n                <h1>COVID-19 Tracker</h1>\r\n            </main>\r\n            <div>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/details\" >Details</Link>\r\n                <Link to=\"/about\" >About</Link>\r\n            </div>\r\n        </Container>\r\n);\r\n\r\n\r\nexport default Header;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { fadeIn } from 'react-animations';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #36393f;\r\n    padding: 0 26px 26px 26px;\r\n    animation: 1.5s ${keyframes`${fadeIn}`};\r\n    \r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        h4 {\r\n            font-size: 24px;\r\n            font-weight: 500;\r\n        }\r\n\r\n        span {\r\n            font-size: 14px;\r\n            font-weight: 100;\r\n            color: #a5a8ab;\r\n            margin-bottom: 8px;\r\n        }\r\n    }  \r\n\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst statusTitles = {\r\n    NewConfirmed: 'New confirmed',\r\n    NewDeaths: 'New deaths',\r\n    NewRecovered: 'New recovered',\r\n    TotalConfirmed: 'Total confirmed',\r\n    TotalDeaths: 'Total deaths',\r\n    TotalRecovered: 'Total recovered',\r\n}\r\n\r\nconst StatusItem = ({ value, title }) => (  \r\n    <Container>\r\n        <div>\r\n            <span>\r\n                { statusTitles[title] }\r\n            </span>\r\n            <h4>{parseInt(value).toLocaleString()}</h4>\r\n        </div>\r\n    </Container> \r\n);\r\n\r\nexport default StatusItem;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;  \r\n    justify-content: center;\r\n    width: 100%;\r\n    background-color: #36393f;\r\n\r\n    h2 {\r\n        font-size: 18px;\r\n        margin: 16px;\r\n        color: #a5a8ab;\r\n    }\r\n\r\n    div {\r\n        max-width: 1040px;\r\n        margin: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n\r\n        h1 {\r\n            font-size: 16px;\r\n            padding: 28px;\r\n        }\r\n    }\r\n\r\n`;","import React, { useEffect, useState } from 'react';\r\n\r\nimport StatusItem from '../StatusItem';\r\n\r\nimport { useData } from '../../context/data';\r\nimport { Container } from './styles';\r\n\r\nconst StatusBar = () => {\r\n\r\n    const [ info, setInfo ] = useState(null);\r\n    const { data, selectedCountry } = useData();\r\n\r\n    useEffect(() => {\r\n\r\n        if (!data) {\r\n            return;\r\n        }\r\n\r\n        const { \r\n            NewConfirmed,\r\n            NewDeaths,\r\n            NewRecovered,\r\n            TotalConfirmed,\r\n            TotalDeaths,\r\n            TotalRecovered } = data;\r\n        \r\n        setInfo({ \r\n            NewConfirmed,\r\n            NewDeaths,\r\n            NewRecovered,\r\n            TotalConfirmed,\r\n            TotalDeaths,\r\n            TotalRecovered });\r\n\r\n    }, [ data ]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!selectedCountry) {\r\n            return;\r\n        }\r\n\r\n        const { \r\n            NewConfirmed,\r\n            NewDeaths,\r\n            NewRecovered,\r\n            TotalConfirmed,\r\n            TotalDeaths,\r\n            TotalRecovered } = selectedCountry;\r\n        \r\n        setInfo({ \r\n            NewConfirmed,\r\n            NewDeaths,\r\n            NewRecovered,\r\n            TotalConfirmed,\r\n            TotalDeaths,\r\n            TotalRecovered });\r\n       \r\n    }, [selectedCountry]);\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <h2>{ selectedCountry \r\n                    ?  `${selectedCountry.Country} by total confirmed cases`\r\n                    : `Global cases by total confirmed`\r\n                }\r\n            </h2>\r\n            <div>\r\n                { !info \r\n                    ?   <h1>Loading informations...</h1> \r\n                    :   Object.entries(info).map(entrie => (\r\n                            <StatusItem \r\n                                title={entrie[0]}\r\n                                value={entrie[1]}\r\n                            />\r\n                        ))\r\n                }\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default StatusBar;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    min-height: 500px;\r\n\r\n    svg {\r\n        max-width: 1040px;\r\n        margin: -240px auto; \r\n\r\n        path {\r\n\r\n            &:hover {\r\n                stroke: rgba( 243, 7, 203, 1);  \r\n            }\r\n        }\r\n    }\r\n\r\n    div {\r\n        max-width: 1040px;\r\n        margin: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        flex-wrap: wrap;\r\n\r\n        h1 {\r\n            font-size: 24px;\r\n            padding: 36px;\r\n        }\r\n    }\r\n\r\n`;","import React, { useState } from 'react';\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\nimport { useData } from '../../context/data';\r\nimport StatusBar from '../StatusBar';\r\nimport { Container } from './styles';\r\n\r\n//const svgUrl = \"https://raw.githubusercontent.com/flekschas/simple-world-map/master/world-map.svg\";\r\nconst svgFile = 'coronavirus-tracker/world.svg';//\"/coronavirus-tracker/globalMap.svg\";\r\n\r\n\r\n\r\nconst Map = () => {\r\n\r\n    const { data, handleSelectCountry } = useData();\r\n\r\n\r\n    const handleClick = (country) => {\r\n        handleSelectCountry(country);\r\n    }\r\n\r\n\r\n    const calculatedColor = (TotalConfirmed) => {\r\n        if (TotalConfirmed === 0) {\r\n            return `fill: rgba( 253, 203, 223, 1); fill-rule:evenodd`;\r\n        }\r\n\r\n        const baseGreen = 203;\r\n        const percentCases = (TotalConfirmed / data.maxCases).toFixed(2);\r\n\r\n        const colorLevel = Math.trunc(baseGreen * percentCases);\r\n\r\n        const green = baseGreen - colorLevel + 17;\r\n\r\n        return `fill: rgba( 253, ${green}, 203, 1); fill-rule:evenodd`;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <SvgLoader path={svgFile}>\r\n            <SvgProxy \r\n                selector=\"path\" \r\n                strokeWidth=\"1\" \r\n                stroke=\"#222\" \r\n            />\r\n            {\r\n                data && Object.values(data.countries).map(country => {\r\n                    if (!country.CountryCode) return;\r\n          \r\n                    const rgbColor = calculatedColor(country.TotalConfirmed);\r\n\r\n                    return <SvgProxy\r\n                        key={country.CountryCode}\r\n                        id={country.CountryCode}\r\n                        selector={`#${country.CountryCode}`} \r\n                        fill=\"#fff\"\r\n                        style={rgbColor}\r\n                        onClick={() => handleClick(country)}\r\n                    />\r\n                })\r\n            }\r\n            \r\n            </SvgLoader> \r\n        </Container>   \r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from 'react';\r\n\r\nimport StatusBar from './StatusBar';\r\nimport Map from './Map';\r\n\r\nconst MainPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <StatusBar />\r\n            <Map /> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.tr`\r\n\r\n    td {\r\n      background-color: rgba(255, 255, 255, .1); \r\n      padding: 8px;\r\n      font-weight: 100;\r\n    }\r\n\r\n    .value {\r\n        text-align: right;\r\n    }\r\n\r\n    .green {\r\n        background-color: rgba(67, 181, 129, .3);  \r\n    }\r\n\r\n    .red {\r\n        background-color: rgba(228, 23, 70, .3);  \r\n    }\r\n\r\n\r\n\r\n`;","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst CountryDetail = ({\r\n        CountryCode,\r\n        Country, \r\n        TotalConfirmed,\r\n        TotalDeaths,\r\n        TotalRecovered,\r\n        NewConfirmed,\r\n        NewDeaths,\r\n        NewRecovered, \r\n        PercentRecovered, \r\n        PercentDeaths\r\n    }) => (\r\n    <Container key={CountryCode}>\r\n        <td>{Country}</td>\r\n        <td className=\"value\">{parseInt(TotalConfirmed).toLocaleString()}</td>\r\n        <td className=\"value green\">{parseInt(TotalRecovered).toLocaleString()}</td>\r\n        <td className=\"value green\">{PercentRecovered.toFixed(2)}</td>\r\n        <td className=\"value red\">{parseInt(TotalDeaths).toLocaleString()}</td>\r\n        <td className=\"value red\">{PercentDeaths.toFixed(2)}</td>\r\n    </Container>\r\n);\r\n\r\nexport default CountryDetail;","import styled, { keyframes } from 'styled-components';\r\nimport { fadeIn } from 'react-animations';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 48px;\r\n    animation: 1.5s ${keyframes`${fadeIn}`}; \r\n\r\n    div {\r\n        max-width: 1040px;\r\n        width: 100%;\r\n        height: 65vh;\r\n        min-height: 400px;\r\n        overflow: scroll;\r\n        scrollbar-arrow-color: #000;\r\n        scrollbar-color: rgba(0,0,0,0.6);\r\n\r\n        &::-webkit-scrollbar {\r\n            width: 0.80em;\r\n            height: 0.80em;\r\n        }\r\n\r\n        &::-webkit-scrollbar-corner {\r\n            background-color: rgba(10,10,20,0.3);\r\n        }\r\n        \r\n        &::-webkit-scrollbar-track {\r\n            background-color: rgba(10,10,20,0.2);\r\n        }\r\n        \r\n        &::-webkit-scrollbar-thumb {\r\n            background-color: rgba(10,10,20,0.2);\r\n        }\r\n\r\n        table {\r\n            width : 100%;\r\n            min-width: 720px;\r\n\r\n            th {\r\n                background-color: #202225;\r\n                padding: 8px 0;\r\n                cursor: pointer;\r\n\r\n                svg {\r\n                    margin-top: -3px;\r\n                    font-size: 0.8rem;\r\n                    font-weight: 100;\r\n                    color: #9f9f9f;\r\n                    margin-right: 5px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { TiArrowUnsorted } from 'react-icons/ti';\r\n\r\nimport { useData } from '../../context/data';\r\nimport CountriesDetail from '../CountriesDetail';\r\nimport { sortRowsPerName } from '../../utils/utils';\r\n\r\nimport { Container } from './styles';\r\n\r\n\r\nconst DetailsGrid = () => {\r\n  \r\n    const [countriesData, setCountriesData] = useState([]);\r\n    const [sortUp, setSortUp] = useState([]);\r\n\r\n    const { data } = useData();\r\n    \r\n\r\n    useEffect(() => {\r\n        data && setCountriesData(data.countries);\r\n    }, [data]);\r\n\r\n\r\n    const handleClick = (el) => {     \r\n        const sortedCountries = sortRowsPerName(countriesData, el.target.id, sortUp);\r\n        setSortUp(!sortUp);\r\n        setCountriesData(sortedCountries);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr> \r\n                            <th id=\"Country\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                Country     \r\n                            </th>\r\n                            <th id=\"TotalConfirmed\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                Cases\r\n                            </th>\r\n                            <th id=\"TotalRecovered\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                Recovered\r\n                            </th>\r\n                            <th id=\"PercentRecovered\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                %\r\n                            </th>\r\n                            <th id=\"TotalDeaths\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                Deaths\r\n                            </th>\r\n                            <th id=\"PercentDeaths\" onClick={handleClick}>\r\n                                <TiArrowUnsorted className=\"icon\"/>\r\n                                %\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { !countriesData \r\n                            ?   <h1>Loading informations...</h1> \r\n                            :   (Object.values(countriesData).map(country => (\r\n                                    <CountriesDetail {...country}/>\r\n                                )))  \r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DetailsGrid;\r\n","\r\nfunction sortRowsPerName(rows, name, up) {\r\n\r\n    const _rows = Object.values(rows);\r\n\r\n    return _rows.sort((a, b) => {\r\n        if (up) {\r\n            return (a[name] > b[name]) ? 1 : ((b[name] > a[name]) ? -1 : 0);\r\n        } else {\r\n            return (a[name] < b[name]) ? 1 : ((b[name] < a[name]) ? -1 : 0);\r\n        }\r\n    });\r\n    \r\n}\r\n\r\nexport { sortRowsPerName };","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 24px;\r\n    background-color: #202225;\r\n    \r\n    h4 {\r\n        font-size: 16px;\r\n        color: #a5a8ab;\r\n    }\r\n\r\n    p {\r\n        color: #a5a8ab;\r\n    }\r\n\r\n    a {\r\n        font-size: 16px;\r\n        transition: all .3s;\r\n\r\n        &:hover {\r\n            color: #43b581;\r\n        }\r\n    }\r\n\r\n`; ","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\n\r\nconst Footer = () => (\r\n    <Container>\r\n        <h4>Created by Fabio Henrique Albiero</h4>\r\n        <p>API used <a href=\"https://thevirustracker.com\">thevirustracker.com</a></p>\r\n    </Container>\r\n)\r\n\r\nexport default Footer;\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        outline: none;\r\n    }\r\n\r\n    body {\r\n        height: 100vh;\r\n        margin: 0 auto;\r\n        background-color: #2f3136;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        background-attachment: fixed;\r\n        background-image: linear-gradient(rgba(47,49,54,.7), rgba(47,49,54,.7)), url(\"/assets/images/bg_code.jpg\");\r\n        background-size: cover;\r\n        color: #f9f9f9;\r\n        -webkit-font-smoothimg: antialiased;\r\n    }\r\n\r\n    a {\r\n        text-decoration: none;\r\n        color: #f9f9f9;\r\n        cursor: pointer;\r\n    }\r\n\r\n    body, input, button {\r\n        font-family: 'Roboto', serif;\r\n        font-size: 16px;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, h6, strong {\r\n        font-weight: 500;\r\n    }\r\n\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    overflow: hidden;\r\n`;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport { DataProvider } from './context/data';\r\nimport Header from './components/Header';\r\nimport MainPage from './components/MainPage';\r\nimport StatusBar from './components/StatusBar';\r\nimport DetailsGrid from './components/DetailsGrid';\r\nimport Footer from './components/Footer';\r\n\r\nimport GlobalStyle from './styles/global';\r\n\r\nconst App = () => (\r\n  <>\r\n    <BrowserRouter>\r\n      <DataProvider>\r\n        <Header />\r\n            <Route exact path=\"/coronavirus-tracker\" component={MainPage} />        \r\n            <Route exact path=\"/\" component={MainPage} />       \r\n            <Route exact path=\"/country\" component={StatusBar} />\r\n            <Route exact path=\"/details\" component={DetailsGrid} /> \r\n        <Footer />\r\n      </DataProvider>\r\n    </BrowserRouter>\r\n    <GlobalStyle />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App /> \r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/virus.19d400fc.svg\";"],"sourceRoot":""}