{"version":3,"sources":["components/GlobalStatsItem.jsx","components/GlobalStats.jsx","components/WorldMap.jsx","components/Country.jsx","components/CountriesInfo.jsx","utils/utils.js","components/MainPage.jsx","components/CountryInfo.jsx","components/footer.jsx","App.js","index.js"],"names":["GlobalStatsItem","title","value","className","parseInt","toLocaleString","replace","toUpperCase","GlobalStats","useState","stats","setStats","useEffect","axios","get","then","res","data","results","total_cases","total_recovered","total_deaths","total_new_cases_today","total_new_deaths_today","cases","recovered","deaths","cases_today","deaths_today","catch","err","console","log","undefined","Object","entries","map","entrie","WorldMap","countries","setCountries","maxCountryCases","setMaxCountryCases","_maxCountryCases","tempCountries","values","countryitems","country","path","id","selector","fill","strokeWidth","stroke","ourid","rgbColor","percent","Math","trunc","diferenceReducer","aux","calcRGBColor","key","code","onClick","to","Country","props","percent_recovered","percent_deaths","toFixed","CountriesInfo","sortUp","setSortUp","handleClick","el","rows","name","up","sortedCountries","target","sort","a","b","MainPage","CountryInfo","total_active_cases","total_serious_cases","Footer","href","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a14cd64.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function GlobalStatsItem({title, value}) {\r\n  return (\r\n        <div className=\"div-globalinfo-box-item\">\r\n            <h4 className=\"global-info-value\">{parseInt(value).toLocaleString()}</h4>\r\n            <span className=\"global-info-title\">\r\n                { title.replace(/_/g,' ').toUpperCase() }\r\n            </span>\r\n        </div>  \r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from   'axios';\r\nimport GlobalStatsItem from './GlobalStatsItem';\r\n\r\nexport default function GlobalStats() {\r\n\r\n    const [stats, setStats] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('https://thevirustracker.com/free-api?global=stats')\r\n            .then( res => {\r\n                const {total_cases, total_recovered, total_deaths, \r\n                       total_new_cases_today, total_new_deaths_today} = res.data.results[0]\r\n                setStats({\r\n                    cases: total_cases,\r\n                    recovered: total_recovered,\r\n                    deaths: total_deaths,\r\n                    cases_today: total_new_cases_today,\r\n                    deaths_today: total_new_deaths_today\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"div-globalinfo-box\">\r\n        {\r\n            (stats.cases === undefined) ?\r\n            <h4>Loading informations...</h4> \r\n            :\r\n            Object.entries(stats).map(entrie => (\r\n                    <GlobalStatsItem \r\n                        title={entrie[0]}\r\n                        value={entrie[1]}\r\n                    />\r\n            ))\r\n            \r\n        }\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\r\n\r\n//const svgUrl = \"https://raw.githubusercontent.com/flekschas/simple-world-map/master/world-map.svg\";\r\nconst svgFile = \"/coronavirus-tracker/globalMap.svg\";\r\n\r\nexport default function WorldMap() {\r\n\r\n    const [countries, setCountries] = useState([]);\r\n    const [maxCountryCases, setMaxCountryCases] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('https://thevirustracker.com/free-api?countryTotals=ALL')\r\n            .then(res => {\r\n                let _maxCountryCases = 0;\r\n\r\n                const tempCountries = Object.values({...res.data.countryitems[0]}).map(country => {\r\n                    \r\n                    if (_maxCountryCases < country.total_cases) {\r\n                        _maxCountryCases = country.total_cases;\r\n                    }\r\n                    \r\n                    return {\r\n                        ...country\r\n                    }\r\n                 });\r\n\r\n                setCountries(tempCountries);\r\n                setMaxCountryCases(_maxCountryCases);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n\r\n    const handleClick = (country) => {\r\n\r\n        return <Link to=\"/country\" />\r\n    }\r\n\r\n\r\n    const calcRGBColor = (total_cases) => {\r\n\r\n        if (maxCountryCases === 0) return;\r\n\r\n        if (total_cases < 10) {\r\n            return \"rgb( 255, 250, 245)\";\r\n        }\r\n\r\n        if (total_cases < 1000) {\r\n            return \"rgb( 255, 200, 195)\";\r\n        }\r\n\r\n        const percent = Math.trunc((total_cases * 100) / maxCountryCases);\r\n        const diferenceReducer = (100 + (percent*2)) * ((100 - percent)/100);\r\n        const aux = Math.trunc((245 * percent)/100 + diferenceReducer);\r\n\r\n        return `rgb( 255, ${250 - aux}, ${245 - aux})`;\r\n    }\r\n\r\n\r\n  return (\r\n      <div className=\"map-box\">\r\n        <SvgLoader path={svgFile} id=\"map\">\r\n            <SvgProxy \r\n                selector=\"path\" \r\n                fill=\"#6f6f6f\" \r\n                strokeWidth=\"1\" \r\n                stroke=\"#222\" \r\n            />\r\n            {\r\n                Object.values(countries).map(country => {\r\n\r\n                    if (!country.ourid) return;\r\n          \r\n                    const rgbColor = calcRGBColor(country.total_cases);\r\n\r\n                    return (<SvgProxy\r\n                                key={country.ourid}\r\n                                className=\"svg-map\"\r\n                                id={country.code}\r\n                                selector={`#${country.code}`} \r\n                                fill={rgbColor}\r\n                                onClick={() => handleClick(country)}\r\n                            />)\r\n                })\r\n            }\r\n            \r\n        </SvgLoader> \r\n      </div>\r\n   \r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nexport default function Country(props) {\r\n\r\n    const { title, total_cases, total_recovered, total_deaths,\r\n            percent_recovered, percent_deaths } = props;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{title}</td>\r\n            <td>{parseInt(total_cases).toLocaleString()}</td>\r\n            <td className=\"td_recovered\">{parseInt(total_recovered).toLocaleString()}</td>\r\n            <td className=\"td_recovered\">{percent_recovered.toFixed(2)}</td>\r\n            <td className=\"td_death\">{parseInt(total_deaths).toLocaleString()}</td>\r\n            <td className=\"td_death\">{percent_deaths.toFixed(2)}</td>\r\n        </tr>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { TiArrowUnsorted } from 'react-icons/ti';\r\n\r\nimport Country from './Country';\r\nimport {sortRowsPerName} from '../utils/utils';\r\n\r\n\r\nexport default function CountriesInfo() {\r\n  \r\n    const [countries, setCountries] = useState([]);\r\n    const [sortUp, setSortUp] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('https://thevirustracker.com/free-api?countryTotals=ALL')\r\n            .then(res => {\r\n\r\n                const tempCountries = Object.values({...res.data.countryitems[0]}).map(country => {\r\n                    \r\n                    const { total_cases, total_deaths, total_recovered } = country;\r\n                    let percent_recovered = ( total_recovered / total_cases ) * 100;\r\n                    let percent_deaths = ( total_deaths / total_cases ) * 100;\r\n\r\n                    percent_recovered = percent_recovered || 0;\r\n                    percent_deaths = percent_deaths || 0;\r\n\r\n                    return {\r\n                        ...country, \r\n                        percent_deaths, \r\n                        percent_recovered\r\n                    }\r\n                 });\r\n\r\n                setCountries(tempCountries);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }, []);\r\n\r\n    const handleClick = (el) => {\r\n        \r\n        const sortedCountries = sortRowsPerName(countries, el.target.id, sortUp);\r\n        setSortUp(!sortUp);\r\n        setCountries(sortedCountries);\r\n    }\r\n\r\n    return (\r\n        <div className=\"div-countries\">\r\n           <table>\r\n            <tr>\r\n                <th id=\"title\" onClick={handleClick}>\r\n                     <TiArrowUnsorted className=\"icon\"/>\r\n                     Country     \r\n                </th>\r\n                <th id=\"total_cases\" onClick={handleClick}>\r\n                    <TiArrowUnsorted className=\"icon\"/>\r\n                    Cases\r\n                </th>\r\n                <th id=\"total_recovered\" onClick={handleClick}>\r\n                    <TiArrowUnsorted className=\"icon\"/>\r\n                    Recovered\r\n                </th>\r\n                <th id=\"percent_recovered\" onClick={handleClick}>\r\n                    <TiArrowUnsorted className=\"icon\"/>\r\n                    %\r\n                </th>\r\n                <th id=\"total_deaths\" onClick={handleClick}>\r\n                    <TiArrowUnsorted className=\"icon\"/>\r\n                    Deaths\r\n                </th>\r\n                <th id=\"percent_deaths\" onClick={handleClick}>\r\n                    <TiArrowUnsorted className=\"icon\"/>\r\n                    %\r\n                </th>\r\n            </tr>\r\n            <tbody>\r\n                {\r\n                    Object.values(countries).map(country => {\r\n                        if (!country.ourid) {\r\n                            return;\r\n                        }\r\n                        return <Country key={country.ourid} {...country}/>\r\n                    })\r\n                }\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","\r\nfunction sortRowsPerName(rows, name, up) {\r\n\r\n    const _rows = Object.values(rows);\r\n\r\n    return _rows.sort((a, b) => {\r\n        if (up) {\r\n            return (a[name] > b[name]) ? 1 : ((b[name] > a[name]) ? -1 : 0);\r\n        } else {\r\n            return (a[name] < b[name]) ? 1 : ((b[name] < a[name]) ? -1 : 0);\r\n        }\r\n    });\r\n    \r\n}\r\n\r\nexport { sortRowsPerName };","import React from 'react';\r\n\r\nimport GlobalStats from './GlobalStats';\r\nimport WorldMap from './WorldMap';\r\nimport CountriesInfo from './CountriesInfo';\r\n\r\nexport default function MainPage() {\r\n    return (\r\n        <>\r\n            <GlobalStats />\r\n            <WorldMap />\r\n            <CountriesInfo />  \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CountryInfo(props) {\r\n\r\n    const { title, total_cases, total_recovered, total_deaths,\r\n            total_new_cases_today, total_new_deaths_today,\r\n            total_active_cases, total_serious_cases } = props;\r\n\r\n    return (\r\n        <div className=\"country-info-box\">\r\n            <h2>{title}</h2>\r\n            <div className=\"country-info-box-inside\">\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_cases).toLocaleString()}</h3>\r\n                    <span>Total cases</span>\r\n                </div> \r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_recovered).toLocaleString()}</h3>\r\n                    <span>Total recovered</span>\r\n                </div>\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_deaths).toLocaleString()}</h3>\r\n                    <span>Total deaths</span>\r\n                </div>\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_new_cases_today).toLocaleString()}</h3>\r\n                    <span>New cases today</span>\r\n                </div>\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_new_deaths_today).toLocaleString()}</h3>\r\n                    <span>New deaths today</span>\r\n                </div>\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_active_cases).toLocaleString()}</h3>\r\n                    <span>Total active cases</span>\r\n                </div>\r\n                <div className=\"country-info-div\">\r\n                    <h3>{parseInt(total_serious_cases).toLocaleString()}</h3>\r\n                    <span>Total serious cases</span>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <h4>Created by Fabio Henrique Albiero</h4>\r\n            <p>Used <a href=\"https://thevirustracker.com\">thevirustracker.com</a> API to bring the informations in real time</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport MainPage from './components/MainPage';\r\nimport CountryInfo from './components/CountryInfo';\r\nimport Footer from './components/footer';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <h1>CORONAVIRUS TRACKER</h1>\r\n\r\n          <Route exact path=\"/\" component={MainPage} />       \r\n\r\n          <Route exact path=\"/country\" component={CountryInfo} />\r\n        \r\n        <Footer />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}